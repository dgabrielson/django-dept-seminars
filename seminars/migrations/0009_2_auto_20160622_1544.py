# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-22 20:44
from __future__ import unicode_literals

import django.db.models.deletion
from django.db import migrations, models

_default_series = None
def _get_default_series(apps):
    global _default_series
    if _default_series is None:
        model = apps.get_model("seminars", "SeminarSeries")
        try:
            _default_series = model.objects.get(slug='general')    # added in the previous migration
        except model.DoesNotExist:
            # unless there is no data...
            pass
    return _default_series


def forward_data(apps, schema_editor):
    model = apps.get_model("seminars", "Seminar")
    default_series = _get_default_series(apps)
    if default_series is None and model.objects.count() > 0:
        assert default_series is not None, "Default series cannot be None!"
    for obj in model.objects.all():
        obj.series = default_series
        obj.save()


def backward_data(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('seminars', '0009_1_auto_20160622_1544'),
    ]

    operations = [
        migrations.RunPython(forward_data, backward_data),

    ]
